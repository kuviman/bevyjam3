name: CI
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-android:
    name: Build android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install things
        if: matrix.platform.channel == 'linux'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev libudev-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-linux-android
          profile: minimal
      - name: Install cargo-apk
        run: cargo install cargo-apk --git "https://github.com/geng-engine/cargo-apk" --branch dev
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c
          add-to-path: false
      - name: Create assets folder
        run: |
          mkdir android-assets
          cp -r assets levels android-assets/
      - name: Setup keystore
        run: |
          echo "${{ secrets.APK_KEYSTORE }}" > keystore.base64
          base64 -d keystore.base64 > secret.keystore
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: apk
          args: build --release
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          CARGO_APK_RELEASE_KEYSTORE: ${{ github.workspace }}/secret.keystore

          CARGO_APK_RELEASE_KEYSTORE_PASSWORD: ${{ secrets.APK_KEYSTORE_PASSWORD }}
      - name: Copy apk
        run: mkdir android && cp target/release/apk/linksider.apk android/
      - name: Upload artifacts (android)
        uses: actions/upload-artifact@v2
        with:
          name: android
          path: android

  build-web:
    name: Build web
    runs-on: ubuntu-latest
    container: kuviman/geng
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: cargo geng build --release --target wasm32-unknown-unknown
      - name: Upload artifacts (web)
        uses: actions/upload-artifact@v2
        with:
          name: web
          path: target/geng

  build-native:
    name: Build native
    runs-on: ${{ matrix.platform.runs-on }}
    strategy:
      matrix:
        platform:
          - runs-on: ubuntu-latest
            channel: linux
          - runs-on: macos-latest
            channel: mac
          - runs-on: windows-latest
            channel: windows
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install things
        if: matrix.platform.channel == 'linux'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev libudev-dev
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Install cargo-geng
        run: cargo install cargo-geng --git https://github.com/geng-engine/geng
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: geng
          args: build --release
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.channel }}
          path: target/geng

  deploy-website:
    name: Deploy Website
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'kuviman'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Build
        uses: shalzz/zola-deploy-action@v0.17.1
        env:
          BUILD_DIR: website
          BUILD_THEMES: false
          BUILD_ONLY: true
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: website/public
          clean-exclude: |
            play
          single-commit: true

  deploy-web:
    name: Deploy web
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'kuviman'
    runs-on: ubuntu-latest
    needs:
      - build-web
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: web
          target-folder: play/web
          single-commit: true

  deploy-android:
    name: Deploy android
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'kuviman'
    runs-on: ubuntu-latest
    needs:
      - build-android
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: android
          target-folder: play/android
          single-commit: true

  deploy-native:
    name: Deploy native
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.repository_owner == 'kuviman'
    runs-on: ubuntu-latest
    needs:
      - build-native
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Create archives
        run: |
          mkdir native
          for platform in linux windows mac; do
            name=${{ github.event.repository.name }}-$platform
            mv $platform $name
            zip -r native/$name.zip $name
          done
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: native
          target-folder: play/native
          single-commit: true
